old.dir
old.dir <- ls()
old.dir <- getwd()
library(swirl)
swirl()
testdir <- dir.create()
dir.create(testdir)
]
?dir.create
dir.create(old.dir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R", "mytest2.R")
info(0)
info()
file.path("mytest2.R", "mytest3.R")
file.path("mytest3.R", "/home/pedro/Documentos/teste.R")
info()
skip()
?dir.create
dir.create()
dir.create("mytest3.R")
dir.create(file.path("mytest2.R", "mytest3.R"), recursive = TRUE)
skip()
unlink("mytest2.R", recursive = TRUE)
skip()
set()
setwd(old.dir)
skip()
rm(old.dir, x)
swirl()
1:20
pi:10
15:1
?":"
seq(1, 20)
seq(0, 10, by = 0.5)
seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
c(o.5, 55, -10, 6)
c(0.5, 55, -10, 6)
num_vector <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
x <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Pedro")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x <- x * 3
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
library(swirl)
swirl()
sum(my_na)
my_data
0/0
Inf - Inf
rm(my_data, my_na, x, y, z)
x
x
x
x
x
x
x
x
info()
play()
nxt()
x
info()
bye()
swirl()
skip()
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x & x > 0)]
x[!is.na(x) & x > 0)]
x[!is.na(x) & x > 0]
x[c(1)]
x[c(3, 5, 7)]
x[0]
x[3000]
library(swirl)
swirl()
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- c(1:21)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
?colnames
colnames(cnames, prefix = "row")
colnames(my_data) <- cnames
my_data
0:10
for(i in 1:4){}
i
remove(i)
for(i in 1:4){ print(i)}
for(i in 1:4){ print(x[i])}
x <- c("a", "b", "c", "d")
for(i in 1:4){ print(x[i])}
for(i in seq_along(x)){ print(x[i])}
for(i in x){ print(i)}
?rbinom
?abs
remove(all)
remove(*)
remove(i, x)
add2 <- function(x, y){
x + y
}
add2(3, 5)
add2 <- function(x, y){
}
above10 <- function(x){
use <- x > 10
x[use]
}
x <- 1:20
above10(x)
}
use <- x > 10
above10 <- function(x){
}
above10 <- function(x){
for(i in seq_along(x)){
if(x[i] > 10){
print(x[i])
}
}
}
x <- 1:30
above10(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means <- mean(y[,i])
}
means
}
columnmean(airquality)
airquality
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
args(lm)
f <- function(){
cat("Hello World!")
}
f()
f <- function(times){
for (i in seq_len(times)){
cat("Hello World!\n")
}
}
f(4)
?seq_len
f <- function(n){
hello <- "Hello World!\n"
for (i in seq_len(n)){
cat(hello)
}
chars <- nchar(hello) * n
chars
}
x <- f(3)
f
x
print(x)
f <- function(n){
hello <- "Hello World!\n"
for (i in seq_len(n)){
cat(hello)
}
chars <- nchar(hello) * n
return(chars)
}
fr <- function(n){
hello <- "Hello World!\n"
for (i in seq_len(n)){
cat(hello)
}
chars <- nchar(hello) * n
return(chars)
}
y <- fr(4)
y
f()
fr()
fr <- function(n){
hello <- "Hello World!\n"
for (i in seq_len(n)){
cat(hello)
}
chars <- nchar(hello) * n
return(chars)
}
fr()
fr <- function(n = 1){
hello <- "Hello World!\n"
for (i in seq_len(n)){
cat(hello)
}
chars <- nchar(hello) * n
return(chars)
}
fr()
formals(fr)
f(n = 2)
fr(n = 2)
str(rnorm)
my_data <- rnorm(100, 2, 1)
sd(my_data)
sd(x = my_data)
sd(x = my_data, na.rm = FALSE)
sd(na.rm = FALSE, x = my_data)
args(lm)
f <- function(a, b){
print(a)
print(b)
}
f(45)
mean
x <- 1:10
mean(x)
args(paste)
args(cat)
paste("a", "b", sep = ".")
lm <- function(x){
return(x * x)
}
lm
lm <- function(x){
return(x * x)
}
lm(2)
?lm
lm(4)
search()
library(swirl)
search()
ls
ls()
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
cube(3)
cube(2)
cube
ls(environment(cube))
f <- function(x){
y <- 2
y^2 + g(x)
}
g <- function(x){
x*y
}
y <- 10
f(3)
c <- c(1, 2, 3)
c
c()
g <- function(x){
a <- 3
x + a + y
}
g(2)
y <- 3
g(2)
?optim
?optim
library(swirl)
rm(list = ls())
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!5 == 7
FALSE && FALSE
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
library(swirl)
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
evaluate(function(x){x + 1}, 6)
evaluate(function(x){x[1]})
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("bom dia", "pedro", "marcelino")
submit()
mad_libs(place = "Irece", adjective = "o lugar eh lindo", noun = "usina")
submit()
"I" %p% "love" %p% "R!"
x <- Sys.time()
x
class(x)
p <- as.POSIXlt(x)
p
names(unclass(p))
p$wday
p$year
library(swir)
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
cube <- function(x, n){
x^3
}
cube(3)
x <- 1:10
if(x > 5){
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
setwd("/home/pedro/Documentos/teste-r/specdata")
files <- c(list.files())
files
table1 <- read.csv(files[1])
head(table)
head(table1)
?c
?Random
?round
rm(table1, files)
wd <- "/home/pedro/Documentos/teste-r"
setwd(wd)
list.files()
?source
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
class(all_files)
setwd(dir)
setwd(wd)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
setwd(wd)
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
